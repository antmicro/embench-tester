name: Benchmarking

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  benching:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        core-type:
          - cv32e40p
          - cv32e41p
          - cva5
          - femtorv
          - firev
          - ibex
          - lm32
          - marocchino
          - minerva
          - mor1kx
          - naxriscv
          - neorv32
          - picorv32
          - vexriscv
          - vexriscv_smp

    steps:

      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Instalation and simulation ${{ matrix.core-type }}
        run: |
          sudo apt-get update
          sudo apt-get -y install gnat python3 python3-setuptools python3-pip zlib1g-dev tcl8.6-dev git make
          sudo apt-get -y install clang libreadline-dev gawk libffi-dev graphviz xdot libboost-system-dev libboost-python-dev libboost-filesystem-dev
          sudo apt-get -y install libevent-dev libjson-c-dev ca-certificates openjdk-17-jre-headless
          pip3 install gitpython
          sudo ./sbtinstall.sh
          git config --global url.https://github.com/.insteadof "git@github.com:"
          make env
          source env/conda/bin/activate embench-tester
          ./install.sh
          ./run.py --cpu-type ${{ matrix.core-type }} --threads 2 --benchmark-strategy both

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: ${{github.job}}
          path: |
            ./*/*.json
            ./**/*.log
    
  benching_blackparrot:
    runs-on: ubuntu-20.04
    steps:

      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Instalation and simulation blackparrot
        run: |
          sudo apt-get update
          sudo apt-get -y install gnat python3 python3-setuptools python3-pip zlib1g-dev tcl8.6-dev git make
          sudo apt-get -y install clang libreadline-dev gawk libffi-dev graphviz xdot libboost-system-dev libboost-python-dev libboost-filesystem-dev
          sudo apt-get -y install libevent-dev libjson-c-dev ca-certificates
          pip3 install gitpython
          git config --global url.https://github.com/.insteadof "git@github.com:"
          make env
          source env/conda/bin/activate embench-tester
          ./install.sh
          ./run.py --cpu-type "blackparrot" --cpu-variant "sim" --integrated-sram-size=32768 --threads 2 --benchmark-strategy both

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: ${{github.job}}
          path: |
            ./*/*.json
            ./**/*.log
  
  # benching_cva6:
  #   runs-on: ubuntu-20.04
  #   steps:

  #     - uses: actions/checkout@v2
  #       with:
  #         submodules: true

  #     - name: Instalation and simulation cva6
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get -y install gnat python3 python3-setuptools python3-pip zlib1g-dev tcl8.6-dev git make
  #         sudo apt-get -y install clang libreadline-dev gawk libffi-dev graphviz xdot libboost-system-dev libboost-python-dev libboost-filesystem-dev
  #         sudo apt-get -y install libevent-dev libjson-c-dev ca-certificates
  #         pip3 install gitpython
  #         git config --global url.https://github.com/.insteadof "git@github.com:"
  #         make env
  #         source env/conda/bin/activate embench-tester
  #         ./install.sh
  #         ./run.py --cpu-type "cva6" --integrated-sram-size=32768 --threads 2 --benchmark-strategy both

  #     - uses: actions/upload-artifact@v2
  #       if: ${{ always() }}
  #       with:
  #         name: ${{github.job}}
  #         path: |
  #           ./*/*.json
  #           ./**/*.log

  benching_microwatt:
    runs-on: ubuntu-20.04
    steps:

      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Instalation and simulation microwatt
        run: |
          sudo apt-get update
          sudo apt-get -y install gnat python3 python3-setuptools python3-pip zlib1g-dev tcl8.6-dev git make
          sudo apt-get -y install clang libreadline-dev gawk libffi-dev graphviz xdot libboost-system-dev libboost-python-dev libboost-filesystem-dev
          sudo apt-get -y install libevent-dev libjson-c-dev ca-certificates
          pip3 install gitpython
          git config --global url.https://github.com/.insteadof "git@github.com:"
          make env
          source env/conda/bin/activate embench-tester
          ./install.sh
          ./run.py --cpu-type "microwatt" --cpu-variant "standard+ghdl" --integrated-sram-size=32768 --threads 2 --benchmark-strategy both

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: ${{github.job}}
          path: |
            ./*/*.json
            ./**/*.log

  # benching_openc906:
  #   runs-on: ubuntu-20.04
  #   steps:

  #     - uses: actions/checkout@v2
  #       with:
  #         submodules: true

  #     - name: Instalation and simulation openc906
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get -y install gnat python3 python3-setuptools python3-pip zlib1g-dev tcl8.6-dev git make
  #         sudo apt-get -y install clang libreadline-dev gawk libffi-dev graphviz xdot libboost-system-dev libboost-python-dev libboost-filesystem-dev
  #         sudo apt-get -y install libevent-dev libjson-c-dev ca-certificates
  #         pip3 install gitpython
  #         git config --global url.https://github.com/.insteadof "git@github.com:"
  #         make env
  #         source env/conda/bin/activate embench-tester
  #         ./install.sh
  #         ./run.py --cpu-type "openc906" --integrated-sram-size=32768 --threads 2 --benchmark-strategy both

  #     - uses: actions/upload-artifact@v2
  #       if: ${{ always() }}
  #       with:
  #         name: ${{github.job}}
  #         path: |
  #           ./*/*.json
  #           ./**/*.log

  # benching_rocket:
  #   runs-on: ubuntu-20.04
  #   steps:

  #     - uses: actions/checkout@v2
  #       with:
  #         submodules: true

  #     - name: Instalation and simulation rocket
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get -y install gnat python3 python3-setuptools python3-pip zlib1g-dev tcl8.6-dev git make
  #         sudo apt-get -y install clang libreadline-dev gawk libffi-dev graphviz xdot libboost-system-dev libboost-python-dev libboost-filesystem-dev
  #         sudo apt-get -y install libevent-dev libjson-c-dev ca-certificates
  #         pip3 install gitpython
  #         git config --global url.https://github.com/.insteadof "git@github.com:"
  #         make env
  #         source env/conda/bin/activate embench-tester
  #         ./install.sh
  #         ./run.py --cpu-type "rocket" --integrated-sram-size=32768 --use-cache 1 --threads 2 --benchmark-strategy both

  #     - uses: actions/upload-artifact@v2
  #       if: ${{ always() }}
  #       with:
  #         name: ${{github.job}}
  #         path: |
  #           ./*/*.json
  #           ./**/*.log

  benching_serv:
    runs-on: ubuntu-20.04
    steps:

      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Instalation and simulation serv
        run: |
          sudo apt-get update
          sudo apt-get -y install gnat python3 python3-setuptools python3-pip zlib1g-dev tcl8.6-dev git make
          sudo apt-get -y install clang libreadline-dev gawk libffi-dev graphviz xdot libboost-system-dev libboost-python-dev libboost-filesystem-dev
          sudo apt-get -y install libevent-dev libjson-c-dev ca-certificates
          pip3 install gitpython
          git config --global url.https://github.com/.insteadof "git@github.com:"
          make env
          source env/conda/bin/activate embench-tester
          ./install.sh
          ./run.py --cpu-type "serv" --threads 1 --benchmark-strategy both

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: ${{github.job}}
          path: |
            ./*/*.json
            ./**/*.log
  
  table_maker:
    runs-on: ubuntu-20.04
    needs: [benching, benching_blackparrot, benching_microwatt, benching_serv]
    steps:

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2

      - name: Result aggregation
        run: |
          sudo apt-get update
          sudo apt-get -y install python3 python3-setuptools python3-pip git grep make
          sudo pip3 install tabulate sphinx jinja2
          sudo pip3 install git+https://github.com/antmicro/sphinx_antmicro_theme.git
          ./table_maker.py --dirs \
          benching/cv32e40p_standard_32_False \
          benching/cv32e41p_standard_32_False \
          benching/cva5_standard_32_False \
          benching/femtorv_standard_32_False \
          benching/firev_standard_32_False \
          benching/ibex_standard_32_False \
          benching/lm32_standard_32_False \
          benching/marocchino_standard_32_False \
          benching/minerva_standard_32_False \
          benching/mor1kx_standard_32_False \
          benching/naxriscv_standard_32_False \
          benching/neorv32_standard_32_False \
          benching/picorv32_standard_32_False \
          benching/vexriscv_standard_32_False \
          benching/vexriscv_smp_standard_32_False \
          benching_blackparrot/blackparrot_sim_32_False \
          benching_microwatt/microwatt_standard\+ghdl_32_False \
          benching_serv/serv_standard_32_False \
          --out-dir docs/source --templates-dir docs/source/templates
          cd docs
          make html

      - uses: actions/upload-artifact@v2
        with:
          name: gh-page
          path: docs/build/html

      - uses: actions/upload-artifact@v2
        with:
          name: aggregated-results
          path: |
              docs/build/*

      - name: Deploy to gh-pages
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: |
          cd docs/build/html
          touch .nojekyll
          git init
          cp ../../../.git/config ./.git/config
          git add .
          git config --local user.email "push@gha"
          git config --local user.name "GHA"
          git commit -am "update ${{ github.sha }}"
          git push -u origin +HEAD:gh-pages
          rm -rf .git
