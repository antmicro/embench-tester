# This is a basic workflow to help you get started with Actions

name: Benchmarking

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:


  benching:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        core-type:
          - ibex
          - vexriscv
          - serv
          - picorv32
          - minerva
          - rocket
#          - blackparrot
          - cv32e40p
          - microwatt
          - lm32
          - mor1kx
    steps:

      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Instalation and simulation ${{ matrix.core-type }}
        run: |
          make env
          source env/conda/bin/activate embench-tester
          ./install.sh
          ./run.py --cpu-type ${{ matrix.core-type }} --threads 1 --benchmark-strategy both

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: ${{github.job}}
          path: |
            ./*/*.json
            ./**/*.log


  # Result aggregation
  table_maker:
    runs-on: ubuntu-20.04
    needs: benching
    steps:

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2

      - name: Result aggregation
        run: |
          sudo apt-get update
          sudo apt-get -y install python3 python3-setuptools python3-pip git
          sudo pip3 install tabulate sphinx 
          sudo pip3 install -Iv jinja2==2.10
          sudo pip3 install git+https://github.com/antmicro/sphinx_antmicro_theme.git
          ./table_maker.py --dirs benching/vexriscv benching/picorv32 benching/minerva benching/cv32e40p benching/serv benching/lm32 benching/mor1kx benching/microwatt benching/ibex benching/rocket \
          --out_dir docs/source --templates_dir docs/source/templates
          cd docs
          make html

      - uses: actions/upload-artifact@v2
        with:
          name: gh-page
          path: docs/build/html

      - uses: actions/upload-artifact@v2
        with:
          name: aggregated-results
          path: |
              docs/build/*

      - name: Deploy to gh-pages
        if: github.event_name == 'push'
        run: |
          cd docs/build/html
          touch .nojekyll
          git init
          cp ../../../.git/config ./.git/config
          git add .
          git config --local user.email "push@gha"
          git config --local user.name "GHA"
          git commit -am "update ${{ github.sha }}"
          git push -u origin +HEAD:gh-pages
          rm -rf .git
